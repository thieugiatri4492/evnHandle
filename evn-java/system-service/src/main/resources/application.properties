spring.application.name=system-service
spring.config.import=optional:configserver:http://localhost:8888
server.port=8000
server.servlet.context-path=/system
spring.profiles.active=dev
#=====================================================
#Hibernate JPA-configure
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto= update
#spring.jpa.defer-datasource-initialization=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#=====================================================
#Mysql database configure
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:172.17.80.141}:3306/evnsystem
spring.datasource.username=root
spring.datasource.password=evnsystempass
#=====================================================
#Postgres database configure
spring.postgres-datasource.schema=evnsystem
spring.postgres-datasource.jdbc-url=jdbc:postgresql://${DB_HOST:172.17.80.141}:5432/evnhandle
spring.postgres-datasource.username=evnhandle
spring.postgres-datasource.password=${DB_PASS:evnhandlepass}
### Avoid java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob()
#is not yet implemented.
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#=====================================================
#Kafka
spring.kafka.bootstrap-servers = localhost:9094
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#=====================================================
#JWT Configure
tripqm.app.jwtSecret= 9a4f2c8d3b7a1e6f45c8a0b3f267d8b1d4e6f3c8a9d2b5f8e3a9c8b5f6v8a3d9
# 1 hour to expired token
tripqm.app.jwtExpirationMs= 3600000
# 1 day to refresh token
tripqm.app.jwtRefreshableMs = 86400000
#=====================================================
#Services calling by Open Feign
app.services.profile=http://localhost:8081/profile
