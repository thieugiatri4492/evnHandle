services:
  evnsqldb:
    build: 
      context: ./db-mysql
    ports:
      - "3306:3306"
    volumes:
      - mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=evnsystempass
    healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            timeout: 20s
            retries: 10
  
  evnpostgredb:
     build: 
      context: ./db-postgresql
     ports:
      - "5432:5432"
     volumes:
      - postgresql:/var/lib/postgresql/data
     healthcheck:
       test: ["CMD-SHELL", "pg_isready"]
       interval: 10s
       timeout: 5s
       retries: 5

  neo4j:
    image: neo4j
    container_name: neo4j
    hostname: neo4j
    environment:   
      - NEO4J_AUTH=neo4j/evnhandlepass  # Set the password for the Neo4j user
      - NEO4J_dbms_memory_pagecache_size=1G  # Configure memory settings
      - NEO4J_dbms_memory_heap_initial__size=1G  # Initial heap size
      - NEO4J_dbms_memory_heap_max__size=2G  # Maximum heap size
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes  # Accept the Neo4j license agreement
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
  
  mongodb:
    image: bitnami/mongodb
    container_name: mongodb
    environment:
      - MONGODB_ROOT_USER=evnhandle
      - MONGODB_ROOT_PASSWORD=evnhandlepass
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/bitnami/mongodb

  kafka:
    image: bitnami/kafka
    container_name: kafka
    hostname: kafka
    ports:
      - '9094:9094'
      - '9092:9092'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER 
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 8763:8080
    restart: always
    logging:
      options:
        max-size: 10m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_NAME=kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka   

  sonarqube:
    image: sonarqube:community
    hostname: sonarqube
    container_name: sonarqube
    depends_on:
      evnsqldb:
        condition: service_healthy
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://evnpostgredb:5432/sonar
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
      #Password sonarqube: tripqm
      #Sonar check code for evnsystem
      # mvn clean verify sonar:sonar \
      #     -Dsonar.projectKey=evnhandle.system \
      #     -Dsonar.projectName='evnhandle.system' \
      #     -Dsonar.host.url=http://localhost:9000 \
      #     -Dsonar.token=sqp_a40bd06b78843abf880507b97b3c99194cf369ac
    volumes:
      - sonarqube_data:/opt/sonarqube/data
    ports:
      - "9000:9000"
volumes:
  mysql: {}
  postgresql: {}
  sonarqube_data: {}
  mongodb_data: {}
  neo4j_data: {}
  neo4j_logs: {}
  neo4j_import: {}
  neo4j_plugins: {}